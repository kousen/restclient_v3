plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.kousenit'
version = '1.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

boolean isMacOS = System.getProperty('os.name')?.toLowerCase()?.contains('mac')
boolean isAarch64 = System.getProperty('os.arch')?.equalsIgnoreCase('aarch64')

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    if (isMacOS && isAarch64) {
        implementation 'io.netty:netty-resolver-dns-native-macos:4.1.110.Final:osx-aarch_64'
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
    jvmArgs('-XX:+EnableDynamicAgentLoading', '-Xshare:off')

    // maxParallelForks = (int) (Runtime.runtime.availableProcessors() / 2 + 1)
}